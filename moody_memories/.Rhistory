library(httr)
install.packages('httr')
installed.packages('dplyr')
install.packages('dplyr')
install.packages('knitr')
install.packages("knitr")
install.packages('plotly')
df <- read(mtcars)
??read
df <- mtcars
View(df)
library(plotly)
df <- precip
df <- state.x77
View(df)
p <- plot_ly(data = df, x = ~Population, y = ~Income)
df <- state.x77
p <- plot_ly(df, x = ~Population, y = ~Income)
??as.data.frame
df <- as.data.frame(state.x77)
p <- plot_ly(df, x = ~Population, y = ~Income)
plotly_build(p)
p <- plot_ly(df, x = ~Population, y = ~Income, color = ~LifeExp)
plotly_build(p)
p <- plot_ly(df, x = ~Population, y = ~Income, color = ~Life Exp)
plotly_build(p)
library(plotly)
df <- as.data.frame(state.x77)
p <- plot_ly(df, x = ~Population, y = ~Income, color = ~Life Exp)
plotly_build(p)
p <- plot_ly(df, x = ~Population, y = ~Income, color = ~Illiteracy)
plotly_build(p)
library(plotly)
df <- as.data.frame(state.x77)
p <- plot_ly(df, type="scatter",x = ~Population, y = ~Income, color = ~Illiteracy)
plotly_build(p)
library(plotly)
df <- as.data.frame(state.x77)
p <- plot_ly(df, type="scatter", mode="markers", x = ~Population, y = ~Income, color = ~Illiteracy)
plotly_build(p)
View(df)
row.names(df)
column.names
# Build plot
plotly_build(p_trace)
p_trace <- plot_ly(df, type="scatter", mode="markers",
x = ~Population,
y = ~Income,
text = df[0],
color = ~Illiteracy)
# Build plot
plotly_build(p_trace)
# Create scatter plot with trace
p_trace <- plot_ly(df, type="scatter", mode="markers",
x = ~Population,
y = ~Income,
text = df$Frost,
color = ~Illiteracy)
# Build plot
plotly_build(p_trace)
colnames(df)
# Use state data as example data set
df <- data.frame(state.x77)
# Use state data as example data set
df <- data.frame(state.x77)
# Use state data as example data set
df <- data.frame(state.x77)
# Load dependencies
library(plotly)
# Use state data as example data set
df <- data.frame(state.x77)
# Create plotly object
p <- plot_ly(df, type="scatter", mode="markers", x = ~Population, y = ~Income, color = ~Illiteracy)
# Build plotly object
plotly_build(p)
# Create scatter plot with trace
p_trace <- plot_ly(df, type="scatter", mode="markers",
x = ~Population,
y = ~Income,
text = df$Frost,
color = ~Illiteracy)
# Build plot
plotly_build(p_trace)
View(df)
# Load dependencies
library(plotly)
# Use state data as example data set
df <- as.data.frame(state.x77)
# Create plotly object
p <- plot_ly(df, type="scatter", mode="markers", x = ~Population, y = ~Income, color = ~Illiteracy)
# Build plotly object
plotly_build(p)
# Create scatter plot with trace
p_trace <- plot_ly(df, type="scatter", mode="markers",
x = ~Population,
y = ~Income,
text = df$Frost,
color = ~Illiteracy)
# Build plot
plotly_build(p_trace)
# Load dependencies
library(plotly)
library(dpylr)
library(tibblr)
# Use state data as example data set
df <- as.data.frame(state.x77)
# Create plotly object
p <- plot_ly(df, type="scatter", mode="markers", x = ~Population, y = ~Income, color = ~Illiteracy)
# Build plotly object
plotly_build(p)
# Create scatter plot with trace
p_trace <- plot_ly(df, type="scatter", mode="markers",
x = ~Population,
y = ~Income,
text = df$Frost,
color = ~Illiteracy)
# Build plot
plotly_build(p_trace)
# Make state names column 1
df_names <- rownames_to_column(df,  var = "State")
# Make state names column 1
df_names <- setDT(df, keep.rownames = TRUE)[]
# Make state names column 1
df_names <- add_rownames(df, "State")
# Make state names column 1
df_names <- add_rownames(df, "State")
# Load dependencies
library(plotly)
library(dpylr)
library(tibblr)
# Use state data as example data set
df <- as.data.frame(state.x77)
# Create plotly object
p <- plot_ly(df, type="scatter", mode="markers", x = ~Population, y = ~Income, color = ~Illiteracy)
# Build plotly object
plotly_build(p)
# Create scatter plot with trace
p_trace <- plot_ly(df, type="scatter", mode="markers",
x = ~Population,
y = ~Income,
text = df$Frost,
color = ~Illiteracy)
# Build plot
plotly_build(p_trace)
# Make state names column 1
df_names <- add_rownames(df, "State")
library(dpylr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
# Load dependencies
library(plotly)
library(dpylr)
# Use state data as example data set
df <- as.data.frame(state.x77)
# Create plotly object
p <- plot_ly(df, type="scatter", mode="markers", x = ~Population, y = ~Income, color = ~Illiteracy)
# Build plotly object
plotly_build(p)
# Create scatter plot with trace
p_trace <- plot_ly(df, type="scatter", mode="markers",
x = ~Population,
y = ~Income,
text = df$Frost,
color = ~Illiteracy)
# Build plot
plotly_build(p_trace)
# Make state names column 1
df_names <- add_rownames(df, "State")
library(dpylr)
dplyr
??dpyr
??dplyr
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
# Load dependencies
library(plotly)
library(dpylr)
load(dpylr)
install.packages("dplyr")
library(dpylr)
library(dplyr)
# Load dependencies
library(plotly)
library(dplyr)
# Use state data as example data set
df <- as.data.frame(state.x77)
# Create plotly object
p <- plot_ly(df, type="scatter", mode="markers", x = ~Population, y = ~Income, color = ~Illiteracy)
# Build plotly object
plotly_build(p)
# Create scatter plot with trace
p_trace <- plot_ly(df, type="scatter", mode="markers",
x = ~Population,
y = ~Income,
text = df$Frost,
color = ~Illiteracy)
# Build plot
plotly_build(p_trace)
# Make state names column 1
df_names <- add_rownames(df, "State")
# Load dependencies
library(plotly)
library(dplyr)
# Use state data as example data set
df <- as.data.frame(state.x77)
# Create plotly object
p <- plot_ly(df, type="scatter", mode="markers", x = ~Population, y = ~Income, color = ~Illiteracy)
# Build plotly object
plotly_build(p)
# Make state names column 1
df_names <- add_rownames(df, "State")
# Create scatter plot with trace
p_trace <- plot_ly(df_names, type="scatter", mode="markers",
x = ~Population,
y = ~Income,
text = df$State,
color = ~Illiteracy)
# Build plot
plotly_build(p_trace)
# Create scatter plot with trace
p_trace <- plot_ly(df_names, type="scatter", mode="markers",
x = ~Population,
y = ~Income,
text = df_names$State,
color = ~Illiteracy)
# Build plot
plotly_build(p_trace)
# Load dependencies
library(plotly)
library(dplyr)
# Use state data as example data set
df <- as.data.frame(state.x77)
# Create plotly object
p <- plot_ly(df, type="scatter", mode="markers", x = ~Population, y = ~Income, color = ~Illiteracy)
# Build plotly object
plotly_build(p)
# Make state names column 1
df_names <- add_rownames(df, "State")
# Create scatter plot with trace
p_trace <- plot_ly(df_names, type="scatter", mode="markers",
x = ~Population,
y = ~Income,
text = df_names$State,
color = ~Illiteracy)
# Build plot
plotly_build(p_trace)
install.packages("shiny")
# Read in data from a CSV, TSV, etc.
# This is using a build-in dataset, mtcars
data <- mtcars
View(data)
# Read in data from a CSV, TSV, etc.
# This is using a built-in dataset, mtcars
# Technically mtcars is already a dataframe, but this shows how to assign a name
df <- mtcars
# Read in data from a CSV, TSV, etc.
# This is using a built-in dataset, mtcars
# Technically mtcars is already a dataframe, but this shows how to assign a name
df <- mtcars
# Comment with an octothorpe!
# Install packages with install.packages("plotly")
# Library any necessary packages
library(plotly)
# Run the cursor's line of code using
# Use the shortcut reference sheet for other shortcuts
# Comment with an octothorpe!
# Install packages with install.packages("plotly")
# Library any necessary packages
library(plotly)
# Read in data from a CSV, TSV, etc.
# This is using a built-in dataset, mtcars
# mtcars is already a dataframe, but this shows how to assign a name
df <- mtcars
# Creating a basic plotly requires a plotly object, we'll call it p
p <- plot_ly(df, x = ~hp, y = ~mpg, type = "scatter", mode = "markers")
# Use plotly_build to render the chart
plotly_build(p)
""
clear
happy <- file("happy.txt")
happy <- read("happy.txt")
happy <- readtext("happy.txt")
library(readtext)
install.packages("readtext")
library(readtext)
happy <- readtext("happy.txt")
setwd("~/Google Drive/School/GSA 2017-2018/8-Sense and Sensibility/moody-memories/moody_memories")
happy <- readtext("happy.txt")
View(happy)
writeLines(gsub(" ", "%20", fixed = TRUE), happy)
writeLines(gsub(" ", "%20", fixed = TRUE, happy)
View(happy)
writeLines(gsub(" ", "%20", fixed = TRUE, happy))
close(happy)
View(happy)
mad <- readtext("mad.txt")
writeLines(gsub(" ", "%20", fixed = TRUE, mad))
close(mad)
sad <- readtext("sad.txt")
writeLines(gsub(" ", "%20", fixed = TRUE, sad))
scared <- readtext("scared.txt")
writeLines(gsub(" ", "%20", fixed = TRUE, scared))
